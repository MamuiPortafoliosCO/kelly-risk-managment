Gu√≠a de Instalaci√≥n - RiskOptima Engine
=======================================

Esta gu√≠a proporciona instrucciones detalladas para instalar RiskOptima Engine en diferentes plataformas y entornos.

üèóÔ∏è **Requisitos Previos**
--------------------------

Antes de instalar RiskOptima Engine, aseg√∫rese de tener los siguientes componentes:

**Software Base**
   - **Python 3.9 o superior**: https://www.python.org/downloads/
   - **Git**: https://git-scm.com/downloads
   - **Rust 1.70 o superior**: https://rustup.rs/

**Para Windows (Requerido para MT5)**
   - **MetaTrader 5 Terminal**: Desc√°rgalo desde tu broker o https://www.metatrader5.com/
   - **Visual Studio Build Tools** (para compilar Rust): https://visualstudio.microsoft.com/visual-cpp-build-tools/
   - **PowerShell** (incluido en Windows moderno)

**Para Linux/macOS (Experimental)**
   - **Wine** (para ejecutar MT5): https://www.winehq.org/
   - **Build tools**: ``build-essential`` (Ubuntu/Debian) o Xcode (macOS)

üîç **Verificaci√≥n de Requisitos**
----------------------------------

Ejecute estos comandos para verificar que tiene todo lo necesario:

**Python:**

.. code-block:: bash

   python --version  # Debe ser 3.9 o superior
   pip --version     # Debe estar disponible

**Rust:**

.. code-block:: bash

   rustc --version   # Debe ser 1.70 o superior
   cargo --version   # Debe estar disponible

**Git:**

.. code-block:: bash

   git --version     # Debe estar disponible

üöÄ **Instalaci√≥n R√°pida (Recomendado)**
---------------------------------------

Para la mayor√≠a de los usuarios, use este m√©todo simplificado:

1. **Clonar el repositorio:**

   .. code-block:: bash

      git clone https://github.com/MamuiPortafoliosCO/kelly-risk-managment.git
      cd kelly-risk-managment

2. **Ejecutar el script de configuraci√≥n:**

   .. code-block:: powershell

      # En Windows PowerShell
      .\scripts\setup.ps1

   .. code-block:: bash

      # En Linux/macOS
      chmod +x scripts/setup.sh
      ./scripts/setup.sh

3. **Verificar la instalaci√≥n:**

   .. code-block:: bash

      uv run risk-optima-engine --help

Si todo est√° correcto, deber√≠a ver la ayuda del comando.

üîß **Instalaci√≥n Manual Detallada**
------------------------------------

Si prefiere instalar manualmente o tiene problemas con el script autom√°tico:

**Paso 1: Instalar UV (Gestor de Dependencias)**

.. code-block:: bash

   # Instalar uv
   pip install uv

   # Verificar instalaci√≥n
   uv --version

**Paso 2: Clonar y Configurar el Proyecto**

.. code-block:: bash

   # Clonar repositorio
   git clone https://github.com/MamuiPortafoliosCO/kelly-risk-managment.git
   cd kelly-risk-managment

   # Sincronizar dependencias Python
   uv sync

**Paso 3: Construir la Extensi√≥n Rust**

.. code-block:: bash

   # Construir extensi√≥n Python-Rust
   uv run maturin develop

   # Verificar que se construy√≥ correctamente
   uv run python -c "from risk_optima_engine import calculate_kelly_criterion; print('Rust extension working!')"

**Paso 4: Configurar MT5 (Opcional)**

Para usar las caracter√≠sticas de integraci√≥n MT5:

1. Instale MetaTrader 5 desde su broker
2. Aseg√∫rese de que MT5 est√© ejecut√°ndose
3. La aplicaci√≥n detectar√° autom√°ticamente la instalaci√≥n

üñ•Ô∏è **Instalaci√≥n con Docker**
------------------------------

Para entornos contenerizados o aislamiento completo:

**Construir la Imagen:**

.. code-block:: bash

   # Construir imagen Docker
   docker build -t riskoptima-engine .

**Ejecutar con Docker Compose:**

.. code-block:: bash

   # Ejecutar stack completo
   docker-compose up

**Ejecutar Individualmente:**

.. code-block:: bash

   # Ejecutar solo backend
   docker run -p 8000:8000 riskoptima-engine backend

   # Ejecutar solo frontend
   docker run -p 8501:8501 riskoptima-engine frontend

üìÅ **Estructura de Archivos Despu√©s de la Instalaci√≥n**
-------------------------------------------------------

Despu√©s de una instalaci√≥n exitosa, deber√≠a tener esta estructura:

.. code-block:: text

   risk-optima-engine/
   ‚îú‚îÄ‚îÄ .venv/                    # Entorno virtual Python (creado por uv)
   ‚îú‚îÄ‚îÄ target/                   # Archivos de compilaci√≥n Rust
   ‚îú‚îÄ‚îÄ src/
   ‚îÇ   ‚îú‚îÄ‚îÄ lib.rs               # N√∫cleo cuantitativo en Rust
   ‚îÇ   ‚îî‚îÄ‚îÄ risk_optima_engine/  # C√≥digo Python
   ‚îÇ       ‚îú‚îÄ‚îÄ __init__.py
   ‚îÇ       ‚îú‚îÄ‚îÄ main.py          # Punto de entrada CLI
   ‚îÇ       ‚îú‚îÄ‚îÄ backend.py       # API FastAPI
   ‚îÇ       ‚îú‚îÄ‚îÄ frontend.py      # Interfaz Streamlit
   ‚îÇ       ‚îî‚îÄ‚îÄ mt5_integration.py # Integraci√≥n MT5
   ‚îú‚îÄ‚îÄ docs/                    # Documentaci√≥n
   ‚îú‚îÄ‚îÄ tests/                   # Tests
   ‚îú‚îÄ‚îÄ scripts/                 # Scripts de automatizaci√≥n
   ‚îú‚îÄ‚îÄ pyproject.toml          # Configuraci√≥n Python
   ‚îú‚îÄ‚îÄ Cargo.toml              # Configuraci√≥n Rust
   ‚îî‚îÄ‚îÄ uv.lock                 # Lockfile de dependencias

üîß **Soluci√≥n de Problemas de Instalaci√≥n**
-------------------------------------------

**Problema: "maturin develop" falla**

.. code-block:: bash

   # Aseg√∫rese de tener Visual Studio Build Tools en Windows
   # O build-essential en Linux:
   sudo apt-get install build-essential

   # Reintente:
   uv run maturin develop --release

**Problema: ImportError de la extensi√≥n Rust**

.. code-block:: bash

   # Reconstruir extensi√≥n
   uv run maturin develop --force

   # Verificar Python path
   uv run python -c "import sys; print(sys.path)"

**Problema: MT5 no se conecta**

- Aseg√∫rese de que MT5 est√© ejecut√°ndose
- Verifique que no haya firewall bloqueando conexiones locales
- Intente reiniciar MT5 y la aplicaci√≥n

**Problema: Puertos ya en uso**

.. code-block:: bash

   # Cambiar puertos si es necesario
   uv run risk-optima-engine backend --port 8001
   uv run risk-optima-engine frontend --server.port 8502

‚ö° **Optimizaciones de Rendimiento**
------------------------------------

Para mejores resultados en sistemas potentes:

**Compilaci√≥n Optimizada:**

.. code-block:: bash

   # Construir con optimizaciones
   uv run maturin develop --release

**Configuraci√≥n de Memoria:**

.. code-block:: bash

   # Para sistemas con mucha RAM, aumentar l√≠mites
   export PYTHON_MAX_MEMORY=8GB  # Ajustar seg√∫n su sistema

üìã **Verificaci√≥n Post-Instalaci√≥n**
-------------------------------------

Ejecute estas pruebas para confirmar que todo funciona:

**Test B√°sico:**

.. code-block:: bash

   # Probar CLI
   uv run risk-optima-engine --help

   # Probar importaci√≥n
   uv run python -c "import risk_optima_engine; print('Import successful')"

**Test de Funcionalidad:**

.. code-block:: bash

   # Probar funciones Rust
   uv run python -c "
   from risk_optima_engine import calculate_kelly_criterion, calculate_performance_metrics, Trade
   print('All imports working!')
   "

**Test de MT5 (Opcional):**

.. code-block:: bash

   # Probar conexi√≥n MT5
   uv run python -c "
   from risk_optima_engine.mt5_integration import connect_mt5
   success, error = connect_mt5()
   print(f'MT5 Connection: {success}')
   "

üéØ **Pr√≥ximos Pasos**
---------------------

Despu√©s de la instalaci√≥n exitosa:

1. **Ejecutar la aplicaci√≥n**: ``uv run risk-optima-engine full``
2. **Acceder a la interfaz**: http://localhost:8501
3. **Cargar datos de ejemplo**: Use ``example_mt5_data.csv``
4. **Leer la documentaci√≥n**: Ver :doc:`quickstart` para comenzar

üìû **Soporte**
--------------

Si tiene problemas durante la instalaci√≥n:

- Verifique los :doc:`troubleshooting`
- Abra un issue en GitHub: https://github.com/MamuiPortafoliosCO/kelly-risk-managment/issues
- Incluya la salida completa de error y su configuraci√≥n del sistema

---

¬°Felicitaciones! RiskOptima Engine est√° ahora instalado y listo para usar.