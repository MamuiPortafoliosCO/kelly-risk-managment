README - RiskOptima Engine
==========================

|license| |python| |rust| |docker|

.. |license| image:: https://img.shields.io/badge/License-MIT-blue.svg
   :target: https://opensource.org/licenses/MIT
   :alt: Licencia MIT

.. |python| image:: https://img.shields.io/badge/Python-3.9+-blue.svg
   :target: https://www.python.org/
   :alt: Python 3.9+

.. |rust| image:: https://img.shields.io/badge/Rust-2021-orange.svg
   :target: https://www.rust-lang.org/
   :alt: Rust 2021

.. |docker| image:: https://img.shields.io/badge/Docker-Supported-blue.svg
   :target: https://www.docker.com/
   :alt: Docker

**RiskOptima Engine** es una herramienta cuantitativa avanzada de an√°lisis y gesti√≥n de riesgos dise√±ada espec√≠ficamente para traders de MetaTrader 5. El sistema proporciona capacidades avanzadas de modelado de riesgos incluyendo optimizaci√≥n del Criterio de Kelly, dimensionamiento de posiciones √ìptimo F y simulaci√≥n Monte Carlo para evaluaci√≥n de desaf√≠os de firmas propietarias de trading.

üöÄ **Caracter√≠sticas Principales**
----------------------------------

üî¨ **An√°lisis de Rendimiento Avanzado**
   - C√°lculo completo de m√©tricas estad√≠sticas de trading
   - An√°lisis de curvas de capital con indicadores de riesgo
   - Identificaci√≥n de mejores y peores operaciones

üìä **Modelos de Riesgo Cuantitativos**
   - **Criterio de Kelly**: Optimizaci√≥n de tama√±o de posici√≥n con multiplicadores fraccionarios
   - **√ìptimo F**: Algoritmo de Ralph Vince para crecimiento geom√©trico m√°ximo
   - **Simulaci√≥n Monte Carlo**: Evaluaci√≥n probabil√≠stica de desaf√≠os de prop firms

üîó **Integraci√≥n en Tiempo Real con MT5**
   - Monitoreo de cuenta en vivo (balance, equity, margen)
   - Sincronizaci√≥n autom√°tica de datos de trading
   - Conexi√≥n IPC segura sin transmisi√≥n externa de datos

üñ•Ô∏è **Interfaz Web Moderna**
   - Interfaz Streamlit intuitiva con navegaci√≥n por pesta√±as
   - Visualizaciones interactivas con Plotly
   - Carga de archivos con validaci√≥n en tiempo real

‚ö° **Rendimiento de Alto Nivel**
   - N√∫cleo computacional en Rust para m√°xima velocidad
   - Procesamiento paralelo con Rayon
   - Arquitectura de memoria eficiente

üìà **Reportes y Exportaci√≥n**
   - Reportes PDF profesionales
   - Exportaci√≥n CSV para an√°lisis externos
   - Visualizaciones de alta calidad

üõ°Ô∏è **Seguridad y Privacidad**
   - Procesamiento completamente local
   - Sin transmisi√≥n de datos externos
   - Encriptaci√≥n de datos sensibles

üèóÔ∏è **Arquitectura T√©cnica**
---------------------------

El sistema utiliza una arquitectura de tres capas:

1. **Capa Frontend**: Interfaz web Streamlit para interacci√≥n del usuario
2. **Capa Backend**: API FastAPI con procesamiento as√≠ncrono
3. **N√∫cleo Cuantitativo**: Biblioteca Rust para c√°lculos de alto rendimiento

.. code-block:: text

   Usuario ‚Üí Frontend (Streamlit) ‚Üí Backend (FastAPI) ‚Üí N√∫cleo (Rust) ‚Üí MT5 (IPC)

üìã **Requisitos del Sistema**
------------------------------

**Sistema Operativo**
   - Windows 10/11 (64-bit) - requerido para MT5
   - Linux/macOS - posible con Wine (experimental)

**Hardware M√≠nimo**
   - Procesador: Quad-core 2.5GHz
   - Memoria RAM: 8GB
   - Almacenamiento: 10GB espacio libre
   - Pantalla: 1920x1080 resoluci√≥n m√≠nima

**Software Requerido**
   - Python 3.9 o superior
   - Rust 1.70 o superior
   - MetaTrader 5 Terminal
   - Git (para instalaci√≥n desde c√≥digo fuente)

üîß **Instalaci√≥n R√°pida**
-------------------------

1. **Clonar el repositorio:**

   .. code-block:: bash

      git clone https://github.com/MamuiPortafoliosCO/kelly-risk-managment.git
      cd kelly-risk-managment

2. **Instalar dependencias:**

   .. code-block:: bash

      # Instalar uv si no est√° disponible
      pip install uv

      # Instalar dependencias del proyecto
      uv sync

3. **Construir extensi√≥n Rust:**

   .. code-block:: bash

      # Construir la extensi√≥n Python-Rust
      uv run maturin develop

4. **Ejecutar la aplicaci√≥n:**

   .. code-block:: bash

      # Opci√≥n 1: Ejecutar todo el stack
      uv run risk-optima-engine full

      # Opci√≥n 2: Ejecutar componentes individuales
      uv run risk-optima-engine backend  # API en http://localhost:8000
      uv run risk-optima-engine frontend # UI en http://localhost:8501

üìñ **Primeros Pasos**
---------------------

1. **Acceder a la interfaz web** en http://localhost:8501
2. **Cargar datos de trading** desde archivos CSV/XML de MT5
3. **Analizar rendimiento** con m√©tricas clave y curvas de capital
4. **Optimizar riesgo** usando simulaciones Monte Carlo
5. **Monitorear en tiempo real** conect√°ndose a MT5

üéØ **Casos de Uso**
-------------------

**Para Traders Individuales**
   - An√°lisis de rendimiento hist√≥rico de estrategias
   - Optimizaci√≥n de tama√±o de posici√≥n por operaci√≥n
   - Evaluaci√≥n de riesgo de drawdown m√°ximo

**Para Desaf√≠os de Prop Firms**
   - Simulaci√≥n de probabilidad de aprobaci√≥n
   - Optimizaci√≥n de par√°metros de riesgo
   - An√°lisis de escenarios "qu√© pasar√≠a si"

**Para Gestores de Carteras**
   - An√°lisis de riesgo de cartera
   - Optimizaci√≥n de asignaci√≥n de capital
   - Reportes de rendimiento estandarizados

üìö **Documentaci√≥n**
--------------------

- :doc:`installation` - Gu√≠a completa de instalaci√≥n
- :doc:`quickstart` - Tutorial paso a paso
- :doc:`user_guide` - Gu√≠a del usuario completa
- :doc:`api_reference` - Referencia de API REST
- :doc:`developer_guide` - Gu√≠a para desarrolladores
- :doc:`troubleshooting` - Soluci√≥n de problemas comunes

üß™ **Ejemplos y Datos de Prueba**
----------------------------------

El repositorio incluye datos de ejemplo para testing:

- ``example_mt5_data.csv`` - Archivo CSV de ejemplo de MT5
- Scripts de ejemplo en ``examples/``
- Tests unitarios en ``tests/``

ü§ù **Contribuir**
-----------------

¬°Las contribuciones son bienvenidas! Por favor:

1. Fork el proyecto
2. Crea una rama para tu feature (``git checkout -b feature/AmazingFeature``)
3. Commit tus cambios (``git commit -m 'Add some AmazingFeature'``)
4. Push a la rama (``git push origin feature/AmazingFeature``)
5. Abre un Pull Request

Ver :doc:`contributing` para m√°s detalles.

üìÑ **Licencia**
---------------

Este proyecto est√° bajo la Licencia MIT - ver el archivo :doc:`license` para m√°s detalles.

üôã **Soporte**
--------------

- **Documentaci√≥n**: https://riskoptima-engine.readthedocs.io/
- **Issues**: https://github.com/MamuiPortafoliosCO/kelly-risk-managment/issues
- **Discusiones**: https://github.com/MamuiPortafoliosCO/kelly-risk-managment/discussions

üìä **Estado del Proyecto**
--------------------------

.. list-table:: Estado de Caracter√≠sticas
   :header-rows: 1
   :widths: 30 20 50

   * - Caracter√≠stica
     - Estado
     - Notas
   * - An√°lisis de Trading
     - ‚úÖ Completo
     - M√©tricas completas, curvas de capital
   * - Criterio de Kelly
     - ‚úÖ Completo
     - Con multiplicadores fraccionarios
   * - √ìptimo F
     - ‚úÖ Completo
     - Optimizaci√≥n de crecimiento geom√©trico
   * - Simulaci√≥n Monte Carlo
     - ‚úÖ Completo
     - Bootstrap con 1000+ simulaciones
   * - Integraci√≥n MT5
     - ‚úÖ Completo
     - Conexi√≥n IPC en tiempo real
   * - Interfaz Web
     - ‚úÖ Completo
     - Streamlit con visualizaciones
   * - API REST
     - ‚úÖ Completo
     - Documentaci√≥n OpenAPI
   * - Docker
     - ‚úÖ Completo
     - Despliegue contenerizado
   * - Documentaci√≥n
     - ‚úÖ Completo
     - Read the Docs completo
   * - Tests
     - üöß En Progreso
     - Cobertura b√°sica implementada

üöÄ **Roadmap**
---------------

**Versi√≥n 1.2.0** (Pr√≥xima)
   - Integraci√≥n de Machine Learning
   - An√°lisis de portafolio multi-activo
   - Backtesting avanzado

**Versi√≥n 2.0.0** (Futuro)
   - Soporte multiplataforma (Linux/macOS)
   - Arquitectura de plugins
   - Interfaz m√≥vil

---

**RiskOptima Engine** - Potenciando el Trading con An√°lisis Cuantitativo Avanzado